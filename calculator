<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Calculator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        .calculator {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
            border: 1px solid rgba(255, 255, 255, 0.2);
            width: 300px;
        }

        .display {
            background: rgba(0, 0, 0, 0.3);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            text-align: right;
            min-height: 80px;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .previous-operand {
            color: rgba(255, 255, 255, 0.7);
            font-size: 14px;
            margin-bottom: 5px;
            min-height: 20px;
        }

        .current-operand {
            color: white;
            font-size: 24px;
            font-weight: bold;
            word-wrap: break-word;
            word-break: break-all;
        }

        .buttons {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            gap: 10px;
        }

        button {
            border: none;
            border-radius: 10px;
            font-size: 18px;
            font-weight: bold;
            height: 60px;
            cursor: pointer;
            transition: all 0.2s ease;
            background: rgba(255, 255, 255, 0.2);
            color: white;
            backdrop-filter: blur(5px);
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        button:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
            background: rgba(255, 255, 255, 0.3);
        }

        button:active {
            transform: translateY(0);
        }

        .operator {
            background: rgba(255, 107, 107, 0.3);
            border: 1px solid rgba(255, 107, 107, 0.5);
        }

        .operator:hover {
            background: rgba(255, 107, 107, 0.5);
        }

        .equals {
            background: rgba(72, 187, 120, 0.3);
            border: 1px solid rgba(72, 187, 120, 0.5);
        }

        .equals:hover {
            background: rgba(72, 187, 120, 0.5);
        }

        .clear {
            background: rgba(245, 101, 101, 0.3);
            border: 1px solid rgba(245, 101, 101, 0.5);
        }

        .clear:hover {
            background: rgba(245, 101, 101, 0.5);
        }

        .span-two {
            grid-column: span 2;
        }

        @media (max-width: 400px) {
            .calculator {
                width: 280px;
                padding: 15px;
            }
            
            button {
                height: 50px;
                font-size: 16px;
            }
            
            .current-operand {
                font-size: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="calculator">
        <div class="display">
            <div class="previous-operand" id="previous-operand"></div>
            <div class="current-operand" id="current-operand">0</div>
        </div>
        <div class="buttons">
            <button class="clear span-two" onclick="clearAll()">AC</button>
            <button class="clear" onclick="deleteLast()">DEL</button>
            <button class="operator" onclick="chooseOperation('÷')">÷</button>
            
            <button onclick="appendNumber('7')">7</button>
            <button onclick="appendNumber('8')">8</button>
            <button onclick="appendNumber('9')">9</button>
            <button class="operator" onclick="chooseOperation('×')">×</button>
            
            <button onclick="appendNumber('4')">4</button>
            <button onclick="appendNumber('5')">5</button>
            <button onclick="appendNumber('6')">6</button>
            <button class="operator" onclick="chooseOperation('-')">-</button>
            
            <button onclick="appendNumber('1')">1</button>
            <button onclick="appendNumber('2')">2</button>
            <button onclick="appendNumber('3')">3</button>
            <button class="operator" onclick="chooseOperation('+')">+</button>
            
            <button class="span-two" onclick="appendNumber('0')">0</button>
            <button onclick="appendNumber('.')">.</button>
            <button class="equals" onclick="compute()">=</button>
        </div>
    </div>

    <script>
        let currentOperand = '';
        let previousOperand = '';
        let operation = null;

        const currentOperandElement = document.getElementById('current-operand');
        const previousOperandElement = document.getElementById('previous-operand');

        function updateDisplay() {
            currentOperandElement.innerText = currentOperand || '0';
            if (operation != null) {
                previousOperandElement.innerText = `${previousOperand} ${operation}`;
            } else {
                previousOperandElement.innerText = '';
            }
        }

        function appendNumber(number) {
            if (number === '.' && currentOperand.includes('.')) return;
            if (currentOperand === '0' && number !== '.') {
                currentOperand = number;
            } else {
                currentOperand = currentOperand.toString() + number.toString();
            }
            updateDisplay();
        }

        function chooseOperation(op) {
            if (currentOperand === '') return;
            if (previousOperand !== '') {
                compute();
            }
            operation = op;
            previousOperand = currentOperand;
            currentOperand = '';
            updateDisplay();
        }

        function compute() {
            let computation;
            const prev = parseFloat(previousOperand);
            const current = parseFloat(currentOperand);
            
            if (isNaN(prev) || isNaN(current)) return;
            
            switch (operation) {
                case '+':
                    computation = prev + current;
                    break;
                case '-':
                    computation = prev - current;
                    break;
                case '×':
                    computation = prev * current;
                    break;
                case '÷':
                    if (current === 0) {
                        alert('Cannot divide by zero!');
                        return;
                    }
                    computation = prev / current;
                    break;
                default:
                    return;
            }
            
            // Round to avoid floating point precision issues
            computation = Math.round((computation + Number.EPSILON) * 100000000) / 100000000;
            
            currentOperand = computation.toString();
            operation = null;
            previousOperand = '';
            updateDisplay();
        }

        function clearAll() {
            currentOperand = '';
            previousOperand = '';
            operation = null;
            updateDisplay();
        }

        function deleteLast() {
            if (currentOperand === '') return;
            currentOperand = currentOperand.toString().slice(0, -1);
            updateDisplay();
        }

        // Keyboard support
        document.addEventListener('keydown', function(event) {
            const key = event.key;
            
            if (key >= '0' && key <= '9' || key === '.') {
                appendNumber(key);
            } else if (key === '+' || key === '-') {
                chooseOperation(key);
            } else if (key === '*') {
                chooseOperation('×');
            } else if (key === '/') {
                event.preventDefault();
                chooseOperation('÷');
            } else if (key === 'Enter' || key === '=') {
                compute();
            } else if (key === 'Escape') {
                clearAll();
            } else if (key === 'Backspace') {
                deleteLast();
            }
        });

        // Initialize display
        updateDisplay();
    </script>
</body>
</html>